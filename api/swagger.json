{
  "openapi": "3.0.3",
  "info": {
    "title": "HouseApp API",
    "description": "API for HouseApp",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/sign-in": {
      "post": {
        "operationId": "signIn",
        "tags": [
          "Auth"
        ],
        "description": "Sigin In",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          },
          "400": {
            "description": "Default Response"
          }
        }
      }
    },
    "/sign-up": {
      "post": {
        "operationId": "signUp",
        "tags": [
          "Auth"
        ],
        "description": "Create new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 11
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  }
                },
                "required": [
                  "phone",
                  "name",
                  "email"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Default Response"
          }
        }
      }
    },
    "/validate": {
      "post": {
        "operationId": "validateToken",
        "tags": [
          "Auth"
        ],
        "description": "Validate Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "valid"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "operationId": "getProfile",
        "tags": [
          "User"
        ],
        "description": "Get profile",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        },
                        "avatarUrl": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "email",
                        "phone",
                        "avatarUrl"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/org/{slug}/create-user-with-invite": {
      "post": {
        "operationId": "createUserWithInvite",
        "tags": [
          "User"
        ],
        "description": "Create new user with invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 11
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  }
                },
                "required": [
                  "phone",
                  "name",
                  "email"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Default Response"
          }
        }
      }
    },
    "/org": {
      "post": {
        "operationId": "createOrganization",
        "tags": [
          "Organization"
        ],
        "description": "Create a new organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "slug",
                    "name"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/org/{slug}": {
      "put": {
        "operationId": "renameOrg",
        "tags": [
          "Organization"
        ],
        "description": "Rename an organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organization": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "slug",
                        "createdAt",
                        "updatedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "organization"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOrg",
        "tags": [
          "Organization"
        ],
        "description": "Delete an organization",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/orgs": {
      "get": {
        "operationId": "listOrganizations",
        "tags": [
          "Organization"
        ],
        "description": "List organizations for authenticated user",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organizations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "slug",
                          "createdAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "organizations"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/org/{slug}/users": {
      "get": {
        "operationId": "listUsersByOrg",
        "tags": [
          "Organization"
        ],
        "description": "List all users in an organization",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "avatarUrl": {
                            "type": "string"
                          },
                          "isOwner": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "name",
                          "email",
                          "phone",
                          "avatarUrl",
                          "isOwner"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "users"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/org/{slug}/invite/{token}/accept": {
      "post": {
        "operationId": "acceptInvite",
        "tags": [
          "Invite"
        ],
        "description": "Accept organization invite",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/org/{slug}/invite": {
      "post": {
        "operationId": "createInvite",
        "tags": [
          "Invite"
        ],
        "description": "Create invite to organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Default Response"
          }
        }
      }
    },
    "/org/{slug}/invites": {
      "get": {
        "operationId": "getInvite",
        "tags": [
          "Invite"
        ],
        "description": "Get invite by user",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invites": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "organization": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "owner": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "organization",
                          "email",
                          "slug",
                          "owner"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "invites"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/complete-goal": {
      "post": {
        "operationId": "completeGoal",
        "tags": [
          "Goal"
        ],
        "description": "Complete a goal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "goalId": {
                    "type": "string"
                  }
                },
                "required": [
                  "goalId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Default Response"
          }
        }
      }
    },
    "/org/{slug}/goal": {
      "post": {
        "operationId": "createGoal",
        "tags": [
          "Goal"
        ],
        "description": "Create a goal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "desiredWeeklyFrequency": {
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "desiredWeeklyFrequency"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Default Response"
          }
        }
      }
    },
    "/org/{slug}/pending-goals": {
      "get": {
        "operationId": "getPendingGoals",
        "tags": [
          "Goal"
        ],
        "description": "get pending goals",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pendingGoals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "desiredWeekFrequency": {
                            "type": "number"
                          },
                          "completionCount": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "desiredWeekFrequency",
                          "completionCount",
                          "createdAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "pendingGoals"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/org/{slug}/summary": {
      "get": {
        "operationId": "getWeekSummary",
        "tags": [
          "Goal"
        ],
        "description": "Get week summary",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "summary": {
                      "type": "object",
                      "properties": {
                        "completed": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number",
                          "nullable": true
                        },
                        "goalsPerDay": {
                          "type": "object",
                          "nullable": true
                        }
                      },
                      "required": [
                        "completed",
                        "total",
                        "goalsPerDay"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "summary"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/org/{slug}/transaction": {
      "post": {
        "operationId": "createTransaction",
        "tags": [
          "Transaction"
        ],
        "description": "Create an transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "default": "expense",
                        "type": "string",
                        "enum": [
                          "expense",
                          "income"
                        ]
                      },
                      "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                      },
                      "amount": {
                        "type": "number",
                        "minimum": 1
                      },
                      "dueDate": {},
                      "payToEmail": {
                        "type": "string",
                        "format": "email",
                        "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                      },
                      "description": {
                        "type": "string"
                      },
                      "isRecurring": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "recurrenceSelector": {
                        "type": "string",
                        "enum": [
                          "date",
                          "repeat"
                        ]
                      },
                      "recurrenceType": {
                        "type": "string",
                        "enum": [
                          "weekly",
                          "monthly",
                          "yearly"
                        ]
                      },
                      "recurrenceUntil": {},
                      "recurrenceInterval": {
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "amount",
                      "dueDate",
                      "payToEmail",
                      "isRecurring",
                      "recurrenceSelector",
                      "recurrenceType"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "default": "expense",
                        "type": "string",
                        "enum": [
                          "expense",
                          "income"
                        ]
                      },
                      "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                      },
                      "amount": {
                        "type": "number",
                        "minimum": 1
                      },
                      "dueDate": {},
                      "payToEmail": {
                        "type": "string",
                        "format": "email",
                        "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                      },
                      "description": {
                        "type": "string"
                      },
                      "isRecurring": {
                        "type": "boolean",
                        "enum": [
                          false
                        ]
                      },
                      "recurrenceSelector": {},
                      "recurrenceType": {},
                      "recurrenceUntil": {},
                      "recurrenceInterval": {}
                    },
                    "required": [
                      "type",
                      "title",
                      "amount",
                      "dueDate",
                      "payToEmail",
                      "isRecurring"
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Default Response"
          }
        }
      }
    },
    "/org/{slug}/transaction/{id}": {
      "get": {
        "operationId": "getTransactionById",
        "tags": [
          "Transaction"
        ],
        "description": "Get transaction by id",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "expense",
                            "income"
                          ]
                        },
                        "title": {
                          "type": "string"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "payTo": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "dueDate": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "paidAt": {
                          "type": "string",
                          "nullable": true
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "paid",
                            "overdue",
                            "scheduled"
                          ]
                        },
                        "overdueDays": {
                          "type": "number"
                        },
                        "isRecurring": {
                          "type": "boolean"
                        },
                        "recurrenceSelector": {
                          "type": "string",
                          "enum": [
                            "date",
                            "repeat"
                          ]
                        },
                        "recurrenceType": {
                          "type": "string",
                          "enum": [
                            "weekly",
                            "monthly",
                            "yearly"
                          ]
                        },
                        "recurrenceUntil": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "recurrenceInterval": {
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "title",
                        "ownerId",
                        "payTo",
                        "amount",
                        "dueDate",
                        "paidAt",
                        "description",
                        "createdAt",
                        "status",
                        "overdueDays",
                        "isRecurring"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "transaction"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/org/{slug}/transactions": {
      "get": {
        "operationId": "listTransactions",
        "tags": [
          "Transaction"
        ],
        "description": "List transactions for authenticated user",
        "parameters": [
          {
            "schema": {
              "default": "all",
              "type": "string",
              "enum": [
                "all",
                "income",
                "expense"
              ]
            },
            "in": "query",
            "name": "type",
            "required": false
          },
          {
            "schema": {},
            "in": "query",
            "name": "dateFrom",
            "required": false
          },
          {
            "schema": {},
            "in": "query",
            "name": "dateTo",
            "required": false
          },
          {
            "schema": {
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 9007199254740991
            },
            "in": "query",
            "name": "page",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 9007199254740991
            },
            "in": "query",
            "name": "perPage",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "expense",
                              "income"
                            ]
                          },
                          "title": {
                            "type": "string"
                          },
                          "ownerId": {
                            "type": "string"
                          },
                          "payTo": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "dueDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "paidAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "paid",
                              "overdue",
                              "scheduled"
                            ]
                          },
                          "overdueDays": {
                            "type": "number"
                          },
                          "isRecurring": {
                            "type": "boolean"
                          },
                          "recurrenceSelector": {
                            "type": "string",
                            "enum": [
                              "date",
                              "repeat"
                            ]
                          },
                          "recurrenceType": {
                            "type": "string",
                            "enum": [
                              "weekly",
                              "monthly",
                              "yearly"
                            ]
                          },
                          "recurrenceUntil": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "recurrenceInterval": {
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "title",
                          "ownerId",
                          "payTo",
                          "amount",
                          "dueDate",
                          "paidAt",
                          "description",
                          "createdAt",
                          "status",
                          "overdueDays",
                          "isRecurring"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "page": {
                      "type": "number"
                    },
                    "perPage": {
                      "type": "number"
                    },
                    "totalItems": {
                      "type": "number"
                    },
                    "totalPages": {
                      "type": "number"
                    },
                    "pagesRemaining": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "transactions",
                    "page",
                    "perPage",
                    "totalItems",
                    "totalPages",
                    "pagesRemaining"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3333",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ]
}