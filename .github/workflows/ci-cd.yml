name: ci-cd

on:
  push:
    branches: [develop, main]
    paths:
      - 'api/**'
      - 'web/**'
      - 'deploy/stacks/**'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [api, web]
    steps:
      - uses: actions/checkout@v4

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - name: Build and push image (linux/arm64)
        run: |
          set -e
          REPO_LC=${GITHUB_REPOSITORY,,}
          IMAGE=ghcr.io/${REPO_LC}-${{ matrix.app }}
          SHA=${GITHUB_SHA::7}
          BRANCH=${GITHUB_REF_NAME}
          echo "Building $IMAGE for linux/arm64 with tags $SHA and $BRANCH"
          docker buildx build \
            --platform linux/arm64 \
            -f ${{ matrix.app }}/Dockerfile \
            -t $IMAGE:$SHA \
            -t $IMAGE:$BRANCH \
            --push \
            ${{ matrix.app }}

      - name: Build summary
        run: |
          printf "### Build & Push (%s)\n- Image: ghcr.io/%s-%s\n- Tags: %s, %s\n" \
            "${{ matrix.app }}" "${GITHUB_REPOSITORY,,}" "${{ matrix.app }}" "${GITHUB_SHA::7}" "${GITHUB_REF_NAME}" >> "$GITHUB_STEP_SUMMARY"

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - uses: actions/checkout@v4

      - name: Check deploy secrets
        id: check
        env:
          HAS_HOST: ${{ secrets.VPS_HOST }}
          HAS_USER: ${{ secrets.VPS_USER }}
          HAS_KEY: ${{ secrets.VPS_SSH_KEY }}
        run: |
          missing=0
          [ -z "$HAS_HOST" ] && echo "::warning title=Missing secret::VPS_HOST not set" && missing=1
          [ -z "$HAS_USER" ] && echo "::warning title=Missing secret::VPS_USER not set" && missing=1
          [ -z "$HAS_KEY" ] && echo "::warning title=Missing secret::VPS_SSH_KEY not set" && missing=1
          if [ $missing -eq 1 ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            printf "### Deploy skipped\nMissing secrets: VPS_HOST, VPS_USER and/or VPS_SSH_KEY\n" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy over SSH to Swarm
        if: steps.check.outputs.skip == 'false'
        id: deploy
        continue-on-error: true
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            SHA=${GITHUB_SHA::7}
            export TAG=$SHA

            sudo mkdir -p /opt/stacks
            sudo mkdir -p /opt/env/houseapp

            # Write stack file
            cat > /tmp/houseapp.yml << 'EOF'
            version: '3.8'
            networks:
              network_swarm_public:
                external: true
            services:
              api:
                image: ghcr.io/fagner3g/houseapp-api:${TAG:-develop}
                env_file:
                  - /opt/env/houseapp/api.env
                deploy:
                  replicas: 2
                  update_config:
                    order: start-first
                    parallelism: 1
                    delay: 10s
                  restart_policy:
                    condition: on-failure
                  labels:
                    - traefik.enable=true
                    - traefik.http.routers.houseapp-api.rule=Host(`api.jarvis.dev.br`)
                    - traefik.http.routers.houseapp-api.entrypoints=websecure
                    - traefik.http.routers.houseapp-api.tls.certresolver=letsencryptresolver
                    - traefik.http.services.houseapp-api.loadbalancer.server.port=3333
                networks:
                  - network_swarm_public
              web:
                image: ghcr.io/fagner3g/houseapp-web:${TAG:-develop}
                env_file:
                  - /opt/env/houseapp/web.env
                deploy:
                  replicas: 2
                  update_config:
                    order: start-first
                    parallelism: 1
                    delay: 10s
                  labels:
                    - traefik.enable=true
                    - traefik.http.routers.houseapp-web.rule=Host(`app.jarvis.dev.br`)
                    - traefik.http.routers.houseapp-web.entrypoints=websecure
                    - traefik.http.routers.houseapp-web.tls=true
                    - traefik.http.routers.houseapp-web.tls.certresolver=letsencryptresolver
                    - traefik.http.services.houseapp-web.loadbalancer.server.port=80
                networks:
                  - network_swarm_public
            EOF

            sudo mv /tmp/houseapp.yml /opt/stacks/houseapp.yml

            # Ensure env files exist (copy from templates if present)
            missing_env=0
            if [ ! -f /opt/env/houseapp/api.env ]; then
              if [ -f /opt/templates/houseapp/api.env ]; then
                sudo cp /opt/templates/houseapp/api.env /opt/env/houseapp/api.env
              else
                echo "::warning title=Missing env template::/opt/templates/houseapp/api.env not found"
                missing_env=1
              fi
            fi
            if [ ! -f /opt/env/houseapp/web.env ]; then
              if [ -f /opt/templates/houseapp/web.env ]; then
                sudo cp /opt/templates/houseapp/web.env /opt/env/houseapp/web.env
              else
                echo "::warning title=Missing env template::/opt/templates/houseapp/web.env not found"
                missing_env=1
              fi
            fi
            if [ $missing_env -eq 1 ]; then
              echo "Deploy skipped - missing env templates in /opt/templates/houseapp"
              exit 1
            fi

            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            echo "Deploying houseapp with TAG=$TAG"
            docker stack deploy -c /opt/stacks/houseapp.yml houseapp --with-registry-auth

      - name: Deploy summary
        if: steps.deploy.outcome == 'success'
        run: |
          printf "### Deploy\n- Branch: %s\n- TAG: %s\n- Target: Swarm stack houseapp (SSH)\n" \
            "${GITHUB_REF_NAME}" "${GITHUB_SHA::7}" >> "$GITHUB_STEP_SUMMARY"

      - name: Deploy failed - missing env files
        if: steps.deploy.outcome == 'failure'
        run: |
          printf "### Deploy Failed\nMissing environment templates on VPS:\n- /opt/templates/houseapp/api.env\n- /opt/templates/houseapp/web.env\n\nThese will be copied to /opt/env/houseapp/ during deployment.\n" >> "$GITHUB_STEP_SUMMARY"
