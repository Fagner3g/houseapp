name: ci-cd

on:
  push:
    branches: [develop, main]
    paths:
      - 'api/**'
      - 'web/**'
      - 'deploy/stacks/**'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [api, web]
    steps:
      - uses: actions/checkout@v4

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - name: Build and push image
        run: |
          set -e
          REPO_LC=${GITHUB_REPOSITORY,,}
          IMAGE=ghcr.io/${REPO_LC}-${{ matrix.app }}
          SHA=${GITHUB_SHA::7}
          BRANCH=${GITHUB_REF_NAME}
          echo "Building $IMAGE with tags $SHA and $BRANCH"
          docker build -f ${{ matrix.app }}/Dockerfile -t $IMAGE:$SHA -t $IMAGE:$BRANCH ${{ matrix.app }}
          docker push $IMAGE:$SHA
          docker push $IMAGE:$BRANCH
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
          echo "sha=$SHA" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Build summary
        run: |
          printf "### Build & Push (%s)\n- Image: ghcr.io/%s-%s\n- Tags: %s, %s\n" \
            "${{ matrix.app }}" "${GITHUB_REPOSITORY,,}" "${{ matrix.app }}" "${GITHUB_SHA::7}" "${GITHUB_REF_NAME}" >> "$GITHUB_STEP_SUMMARY"

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - uses: actions/checkout@v4

      - name: Check deploy secrets
        id: check
        env:
          HAS_HOST: ${{ secrets.VPS_HOST }}
          HAS_USER: ${{ secrets.VPS_USER }}
          HAS_KEY: ${{ secrets.VPS_SSH_KEY }}
        run: |
          missing=0
          if [ -z "$HAS_HOST" ]; then echo "::warning title=Missing secret::VPS_HOST not set"; missing=1; fi
          if [ -z "$HAS_USER" ]; then echo "::warning title=Missing secret::VPS_USER not set"; missing=1; fi
          if [ -z "$HAS_KEY" ]; then echo "::warning title=Missing secret::VPS_SSH_KEY not set"; missing=1; fi
          if [ $missing -eq 1 ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            printf "### Deploy skipped\nMissing secrets: VPS_HOST, VPS_USER and/or VPS_SSH_KEY\n" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy over SSH to Swarm
        if: steps.check.outputs.skip == 'false'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            SHA=${GITHUB_SHA::7}
            export TAG=$SHA
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            echo "Deploying houseapp with TAG=$TAG"
            docker stack deploy -c /opt/stacks/houseapp.yml houseapp --with-registry-auth

      - name: Deploy summary
        run: |
          printf "### Deploy\n- Branch: %s\n- TAG: %s\n- Target: Swarm stack houseapp (SSH)\n" \
            "${GITHUB_REF_NAME}" "${GITHUB_SHA::7}" >> "$GITHUB_STEP_SUMMARY"
